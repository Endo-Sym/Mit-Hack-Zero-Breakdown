import { useState, useEffect } from 'react'
import './App.css'
import ChatInterface from './components/ChatInterface'
import SensorAnalysis from './components/SensorAnalysis'
import RepairManual from './components/RepairManual'
import Dashboard from './components/Dashboard'
import Settings from './components/Settings'
import { IoChatbubbleEllipses, IoSettings } from "react-icons/io5"
import { MdAnalytics, MdDashboard } from "react-icons/md"
import { FaTools } from "react-icons/fa"

// Default initial messages
const defaultChatMessages = [
  {
    role: 'assistant',
    content: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ AI Agent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Zero Breakdown Prediction\n\n‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÉ‡∏ô 2 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å:\n\n1. üìä **‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Zero Breakdown** - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• sensor ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£\n2. üìñ **‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°** - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ\n\n‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?'
  }
]

const defaultManualConversations = [
  {
    question: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö',
    answer: '# üìñ ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£\n\n‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏∞‡∏ö‡∏ö Feed Mill\n\n**‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:**\n- ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå\n- ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ bearing ‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢\n- ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå\n- ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏™‡∏π‡∏á\n- ‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô\n\n‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö!'
  }
]

function App() {
  const [activeTab, setActiveTab] = useState(() => {
    return localStorage.getItem('activeTab') || 'chat'
  })

  // State for Chat Interface - Load from localStorage
  const [chatMessages, setChatMessages] = useState(() => {
    const saved = localStorage.getItem('chatMessages')
    return saved ? JSON.parse(saved) : defaultChatMessages
  })

  // State for Repair Manual - Load from localStorage
  const [manualConversations, setManualConversations] = useState(() => {
    const saved = localStorage.getItem('manualConversations')
    return saved ? JSON.parse(saved) : defaultManualConversations
  })

  // Save to localStorage whenever chatMessages changes
  useEffect(() => {
    localStorage.setItem('chatMessages', JSON.stringify(chatMessages))
  }, [chatMessages])

  // Save to localStorage whenever manualConversations changes
  useEffect(() => {
    localStorage.setItem('manualConversations', JSON.stringify(manualConversations))
  }, [manualConversations])

  // Save active tab to localStorage
  useEffect(() => {
    localStorage.setItem('activeTab', activeTab)
  }, [activeTab])

  return (
    <div className="app-container">
      <aside className="sidebar">
        <div className="sidebar-header">
          <h2>Zero Breakdown</h2>
        </div>

        <nav className="sidebar-nav">
          <button
            className={activeTab === 'dashboard' ? 'nav-item active' : 'nav-item'}
            onClick={() => setActiveTab('dashboard')}
          >
            <MdDashboard className="nav-icon" />
            <span className="nav-text">Dashboard</span>
          </button>
          <button
            className={activeTab === 'chat' ? 'nav-item active' : 'nav-item'}
            onClick={() => setActiveTab('chat')}
          >
            <IoChatbubbleEllipses className="nav-icon" />
            <span className="nav-text">Chat</span>
          </button>
          <button
            className={activeTab === 'sensor' ? 'nav-item active' : 'nav-item'}
            onClick={() => setActiveTab('sensor')}
          >
            <MdAnalytics className="nav-icon" />
            <span className="nav-text">‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Sensor</span>
          </button>
          <button
            className={activeTab === 'manual' ? 'nav-item active' : 'nav-item'}
            onClick={() => setActiveTab('manual')}
          >
            <FaTools className="nav-icon" />
            <span className="nav-text">‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏°</span>
          </button>
          <button
            className={activeTab === 'settings' ? 'nav-item active' : 'nav-item'}
            onClick={() => setActiveTab('settings')}
          >
            <IoSettings className="nav-icon" />
            <span className="nav-text">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</span>
          </button>
        </nav>

        <div className="sidebar-footer">
          <p></p>
        </div>
      </aside>

      <main className="main-container">
        <header className="main-header">
          <h1>
            {activeTab === 'dashboard' && (
              <><MdDashboard style={{ marginRight: '0.5rem' }} /> Dashboard</>
            )}
            {activeTab === 'chat' && (
              <><IoChatbubbleEllipses style={{ marginRight: '0.5rem' }} /> Chat AI Agent</>
            )}
            {activeTab === 'sensor' && (
              <><MdAnalytics style={{ marginRight: '0.5rem' }} /> ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Sensor</>
            )}
            {activeTab === 'manual' && (
              <><FaTools style={{ marginRight: '0.5rem' }} /> ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°</>
            )}
            {activeTab === 'settings' && (
              <><IoSettings style={{ marginRight: '0.5rem' }} /> ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</>
            )}
          </h1>
        </header>

        <div className="main-content">
          {activeTab === 'dashboard' && <Dashboard />}
          {activeTab === 'chat' && (
            <ChatInterface
              messages={chatMessages}
              setMessages={setChatMessages}
            />
          )}
          {activeTab === 'sensor' && <SensorAnalysis />}
          {activeTab === 'manual' && (
            <RepairManual
              conversations={manualConversations}
              setConversations={setManualConversations}
            />
          )}
          {activeTab === 'settings' && <Settings />}
        </div>
      </main>
    </div>
  )
}

export default App
